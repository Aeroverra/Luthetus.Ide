@using Luthetus.CompilerServices.Lang.DotNetSolution.Code;
@using Luthetus.CompilerServices.Lang.DotNetSolution.CompilerServiceCase;
@using Luthetus.TextEditor.RazorLib.Lexes.Models;

<div class="luth_ide_solution-editor">
    @{
        var compilerServiceResource = _compilerServiceRegistry.DotNetSolutionCompilerService
            .GetCompilerServiceResourceFor(DotNetSolutionResourceUri);
    }

    @if (compilerServiceResource is not null)
    {
        var dotNetSolutionResource = (DotNetSolutionResource)compilerServiceResource;

        <div class="luth_ide_solution-editor-compilation-unit">

            @{ var parser = dotNetSolutionResource.CompilationUnit?.Parser; }

            @if (parser is not null)
            {
                var solutionParser = (TestDotNetSolutionParser)parser;

                <div>
                    <div style="display: flex;">
                        <div class="luth_te_type">
                            @solutionParser.DotNetSolutionHeader.FormatVersionPair?.AssociatedNameToken.TextSpan.GetText()
                        </div>
                        &nbsp;
                        <div class="luth_te_method">
                            @solutionParser.DotNetSolutionHeader.FormatVersionPair?.AssociatedValueToken.TextSpan.GetText()
                        </div>
                    </div>
                    <div style="display: flex;">
                        <div class="luth_te_type">
                            @solutionParser.DotNetSolutionHeader.HashtagVisualStudioVersionPair?.AssociatedNameToken.TextSpan.GetText()
                        </div>
                        &nbsp;
                        <div class="luth_te_method">
                            @solutionParser.DotNetSolutionHeader.HashtagVisualStudioVersionPair?.AssociatedValueToken.TextSpan.GetText()
                        </div>
                    </div>
                    <div style="display: flex;">
                        <div class="luth_te_type">
                            @solutionParser.DotNetSolutionHeader.ExactVisualStudioVersionPair?.AssociatedNameToken.TextSpan.GetText()
                        </div>
                        &nbsp;
                        <div class="luth_te_method">
                            @solutionParser.DotNetSolutionHeader.ExactVisualStudioVersionPair?.AssociatedValueToken.TextSpan.GetText()
                        </div>
                    </div>
                    <div style="display: flex;">
                        <div class="luth_te_type">
                            @solutionParser.DotNetSolutionHeader.MinimumVisualStudioVersionPair?.AssociatedNameToken.TextSpan.GetText()
                        </div>
                        &nbsp;
                        <div class="luth_te_method">
                            @solutionParser.DotNetSolutionHeader.MinimumVisualStudioVersionPair?.AssociatedValueToken.TextSpan.GetText()
                        </div>
                    </div>
                </div>

                <hr/>

                <div>
                    @foreach (var project in solutionParser.DotNetSolutionProjectEntryBag)
                    {
                        @Luthetus.CompilerServices.Lang.DotNetSolution.Facts.LexSolutionFacts.Project.PROJECT_DEFINITION_START_TOKEN
                        <div style="padding-left: 10px;">
                            <div style="padding-left: 10px; border-left: 2px solid var(--luth_primary-border-color);">
                                <div>
                                    ProjectTypeGuid: @project.ProjectTypeGuid
                                </div>
                                <div>
                                    DisplayName: @project.DisplayName
                                </div>
                                <div>
                                    RelativePathFromSolutionFileString: @project.RelativePathFromSolutionFileString
                                </div>
                                <div>
                                    ProjectIdGuid: @project.ProjectIdGuid
                                </div>

                                <hr/>

                                <div>
                                    SourceText: ("{@project.ProjectTypeGuid}") = "@project.DisplayName", "@project.RelativePathFromSolutionFileString", "{@project.ProjectIdGuid}"
                                </div>
                            </div>
                        </div>
                        @Luthetus.CompilerServices.Lang.DotNetSolution.Facts.LexSolutionFacts.Project.PROJECT_DEFINITION_END_TOKEN
                    }
                </div>

                <hr/>

                <div>
                    DotNetSolutionGlobal

                    <div>
                        WasFound: @solutionParser.DotNetSolutionGlobal.WasFound
                    </div>
                    <div>
                        @foreach (var globalSection in solutionParser.DotNetSolutionGlobal.DotNetSolutionGlobalSectionBag)
                        {
                            <div>
                                DotNetSolutionGlobalSection

                                <div>
                                    GlobalSectionArgument: @globalSection.GlobalSectionArgument?.TextSpan.GetText()
                                </div>
                                <div>
                                    GlobalSectionOrder: @globalSection.GlobalSectionOrder?.TextSpan.GetText()
                                </div>
                                <div>
                                    AssociatedEntryGroup

                                    @foreach (var associatedEntry in globalSection.AssociatedEntryGroup.AssociatedEntryBag)
                                    {
                                        <div>
                                            IAssociatedEntry

                                            <div>
                                                AssociatedEntryKind: @associatedEntry.AssociatedEntryKind
                                            </div>

                                            @if (associatedEntry is AssociatedEntryPair associatedEntryPair)
                                            {
                                                <div>
                                                    AssociatedNameToken: @associatedEntryPair.AssociatedNameToken?.TextSpan.GetText()
                                                </div>
                                                <div>
                                                    AssociatedValueToken: @associatedEntryPair.AssociatedValueToken?.TextSpan.GetText()
                                                </div>
                                            }
                                            else if (associatedEntry is AssociatedEntryGroup associatedEntryGroup)
                                            {
                                                foreach (var innerEntry in associatedEntryGroup.AssociatedEntryBag)
                                                {
                                                    <div>#TODO: this</div>
                                                }
                                            }
                                            else
                                            {
                                                <div>Unknown @nameof(AssociatedEntryKind): @associatedEntry.AssociatedEntryKind</div>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>

        <hr/>

        <div class="luth_ide_solution-editor-syntactic-text-span-bag">
            @foreach (var textSpan in dotNetSolutionResource.SyntacticTextSpanBag)
            {
                <div class="luth_ide_solution-editor-syntactic-text-span">
                    @textSpan.GetText()
                </div>
            }
        </div>
    }
</div>