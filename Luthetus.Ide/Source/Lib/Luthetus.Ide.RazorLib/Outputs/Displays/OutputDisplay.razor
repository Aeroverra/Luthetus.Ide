@using Luthetus.Common.RazorLib.Keys.Models;
@using Luthetus.TextEditor.RazorLib.TextEditors.Displays
@using Luthetus.TextEditor.RazorLib.Htmls.Models
@using Luthetus.Ide.RazorLib.Terminals.Models;

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@{ var terminalSession = TerminalSessionsStateSelection.Value; }

<div class="luth_ide_terminal-output-display">
    <div class="luth_ide_terminal-output-history-display">
        @{
            _ = TerminalSessionWasModifiedStateWrap.Value.EmptyTextHack;

			var outputStrList = (List<string>?)null;

            if (terminalSession is not null)
            {
                if (TerminalCommandKey == Key<TerminalCommand>.Empty)
                {
                    // Render out all of the session's standard output
                    outputStrList = terminalSession.GetStandardOut() ?? new List<string>();
                }
                else
                {
                    // Render out ONLY the standard output from the specified command
                    outputStrList = terminalSession.GetStandardOut(TerminalCommandKey) ?? new List<string>();
                }
            }
        }

		<div class="luth_ide_output-result-list">
			@{ var outputResultList = OutputParser.Parse(outputStrList); }

			@for (var badI = 0; badI < outputResultList.Count; badI++)
			{
				var index = badI;
				var outputResult = outputResultList[index];
				<div>
					<span title="Row Number: @(index + 1)">
						@((MarkupString)outputResult.SourceText.EscapeHtml())
					</span>
				</div>
			}
		</div>
    </div>
    
    <div class="luth_ide_terminal-output-input-display">
        @if (terminalSession is not null && AllowInput)
        {
            <div>
                @(terminalSession.WorkingDirectoryAbsolutePathString ?? "null")
            </div>
            
            <div>
                <TextEditorViewModelDisplay TextEditorViewModelKey="terminalSession.TextEditorViewModelKey"
                                            ViewModelDisplayOptions="_textEditorViewModelDisplayOptions" />
            </div>
        }
    </div>
</div>        
