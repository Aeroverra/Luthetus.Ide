@using Luthetus.Common.RazorLib.Keys.Models;
@using Luthetus.Ide.RazorLib.Terminals.Models;
@using Luthetus.TextEditor.RazorLib.TextEditors.Displays

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@{ var terminalSession = TerminalSessionsStateSelection.Value; }

<div class="luth_ide_terminal-output-display">
    <div class="luth_ide_terminal-output-history-display">
        @{
            _ = TerminalSessionWasModifiedStateWrap.Value.EmptyTextHack;

			var outputStrList = (List<string>?)null;

            if (terminalSession is not null)
            {
                if (TerminalCommandKey == Key<TerminalCommand>.Empty)
                {
                    // Render out all of the session's standard output
                    outputStrList = terminalSession.GetStandardOut() ?? new List<string>();
                }
                else
                {
                    // Render out ONLY the standard output from the specified command
                    outputStrList = terminalSession.GetStandardOut(TerminalCommandKey) ?? new List<string>();
                }
            }
        }

		@{ var sequenceOutput = 0; }
		@(new RenderFragment(builder => OutputParser.Parse(
			outputStrList,
			builder,
			ref sequenceOutput)))
    </div>
    
    <div class="luth_ide_terminal-output-input-display">
        @if (terminalSession is not null && AllowInput)
        {
            <div>
                @(terminalSession.WorkingDirectoryAbsolutePathString ?? "null")
            </div>
            
            <div>
                <TextEditorViewModelDisplay TextEditorViewModelKey="terminalSession.TextEditorViewModelKey"
                                            ViewModelDisplayOptions="_textEditorViewModelDisplayOptions" />
            </div>
        }
    </div>
</div>        
