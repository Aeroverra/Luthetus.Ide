@using Luthetus.Common.RazorLib.Contexts.Displays
@using Luthetus.Common.RazorLib.Contexts.Models
@using Luthetus.Common.RazorLib.Resizes.Displays
@using Luthetus.Ide.RazorLib.TestExplorers.States
@using Luthetus.Ide.RazorLib.TestExplorers.Models

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@{
	var testExplorerState = TestExplorerStateWrap.Value;
	var appOptionsState = AppOptionsStateWrap.Value;

	if (!TreeViewService.TryGetTreeViewContainer(
			TestExplorerState.TreeViewTestExplorerKey,
			out var treeViewContainer))
	{
		treeViewContainer = null;
	}

	var renderBatch = new TestExplorerRenderBatch(
		testExplorerState,
		appOptionsState,
		treeViewContainer);
}

<ContextBoundary ContextRecord="ContextFacts.TestExplorerContext"
                 ClassCssString="luth_ide_test-explorer"
                 StyleCssString="height: 100%; width: 100%;">

    <div class="luth_ide_section-title">
        Test Explorer
    </div>

    <div class="luth_ide_section-body"
         style="width: 100%; display: flex;">

		@if (renderBatch.TreeViewContainer is null)
		{
			<div>renderBatch.TreeViewContainer is null</div>
		}
		else
		{
			var renderBatchValidated = new TestExplorerRenderBatchValidated(renderBatch);

			<CascadingValue Value="renderBatchValidated">

				<TestExplorerTreeViewDisplay ElementDimensions="_treeViewElementDimensions"/>
	
				<ResizableColumn LeftElementDimensions="_treeViewElementDimensions"
				                 RightElementDimensions="_detailsElementDimensions"
								 ReRenderFuncAsync="async () => await InvokeAsync(StateHasChanged).ConfigureAwait(false)" />
		
				<TestExplorerDetailsDisplay ElementDimensions="_detailsElementDimensions"/>
			</CascadingValue>
		}
    </div>
</ContextBoundary>
