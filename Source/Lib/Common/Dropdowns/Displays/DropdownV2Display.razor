@using Luthetus.Common.RazorLib.Dimensions.Models

@{
	var localDropdown = Dropdown;
	var localHtmlElementDimensions = _htmlElementDimensions;
	var localGlobalHtmlElementDimensions = _globalHtmlElementDimensions;
	var localAppDimensionState = AppDimensionStateWrap.Value;
}

<div class="luth_dropdown"
     style="@GetStyleCssString(localDropdown)"
	 id="@_htmlElementId"
	 @onclick:stopPropagation="true">

	<div>_renderCount: @_renderCount</div>

	<div>WidthInPixels: @(localHtmlElementDimensions?.WidthInPixels ?? 0)</div>
	<div>HeightInPixels: @(localHtmlElementDimensions?.HeightInPixels ?? 0)</div>
	<div>LeftInPixels: @(localHtmlElementDimensions?.LeftInPixels ?? 0)</div>
	<div>TopInPixels: @(localHtmlElementDimensions?.TopInPixels ?? 0)</div>
	<div>ZIndex: @(localHtmlElementDimensions?.ZIndex ?? 0)</div>

	<div>WidthInPixels: @(localGlobalHtmlElementDimensions?.WidthInPixels ?? 0)</div>
	<div>HeightInPixels: @(localGlobalHtmlElementDimensions?.HeightInPixels ?? 0)</div>
	<div>LeftInPixels: @(localGlobalHtmlElementDimensions?.LeftInPixels ?? 0)</div>
	<div>TopInPixels: @(localGlobalHtmlElementDimensions?.TopInPixels ?? 0)</div>
	<div>ZIndex: @(localGlobalHtmlElementDimensions?.ZIndex ?? 0)</div>

	@{
		_isOffScreenHorizontally = 
			(localHtmlElementDimensions?.WidthInPixels ?? 0) + (localHtmlElementDimensions?.LeftInPixels ?? 0)
			> (localGlobalHtmlElementDimensions?.WidthInPixels ?? 0);

		_isOffScreenVertically = 
			(localHtmlElementDimensions?.HeightInPixels ?? 0) + (localHtmlElementDimensions?.TopInPixels ?? 0)
			> (localGlobalHtmlElementDimensions?.HeightInPixels ?? 0);

		<div>_isOffScreenHorizontally: @_isOffScreenHorizontally</div>
		<div>_isOffScreenVertically: @_isOffScreenVertically</div>
	}

	<div>Width: @(localAppDimensionState?.Width ?? 0)</div>
	<div>Height: @(localAppDimensionState?.Height ?? 0)</div>
	<div>Left: @(localAppDimensionState?.Left ?? 0)</div>
	<div>Top: @(localAppDimensionState?.Top ?? 0)</div>
	
	<CascadingValue Value="localDropdown">
        <DynamicComponent @key="localDropdown.Key"
                          Type="localDropdown.ComponentType"
                          Parameters="localDropdown.ComponentParameterMap" />
    </CascadingValue>
</div>
