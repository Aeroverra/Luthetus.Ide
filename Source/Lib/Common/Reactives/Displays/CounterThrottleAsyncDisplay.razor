<div class="luth_counter-throttle-async"
     style="background-color: var(--luth_te_secondary-background-color); color: var(--luth_te_secondary-foreground-color);">
    <button class="luth_button"
            @onclick="FireThrottleOnClick">
        @_count Async
    </button>

    <button class="luth_button"
            @onclick="() => {}">
        ReRender
    </button>
    
    <div class="luth_counter-throttle-async-visualization">
        
        <div>WorkItemsExecutedCount:&nbsp;@(CounterThrottleAsync.WorkItemsExecutedCount)</div>

        <div>PushEventStart_SynchronizationContext:&nbsp;@(CounterThrottleAsync.PushEventStart_SynchronizationContext?.ToString() ?? "null")</div>
        <div>PushEventEnd_SynchronizationContext:&nbsp;@(CounterThrottleAsync.PushEventEnd_SynchronizationContext?.ToString() ?? "null")</div>
        
        <ThreadDisplay DisplayName="PushEventStart_Thread"
                       Thread="CounterThrottleAsync.PushEventStart_Thread"
                       DateTimeTuple="CounterThrottleAsync.PushEventStart_DateTimeTuple"
                       LoadingIconTask="Task.CompletedTask"/>

        <ThreadDisplay DisplayName="PushEventEnd_Thread"
                       Thread="CounterThrottleAsync.PushEventEnd_Thread"
                       DateTimeTuple="CounterThrottleAsync.PushEventEnd_DateTimeTuple"
                       LoadingIconTask="CounterThrottleAsync._delayTask" />

        <div>ThrottleTimeSpan:&nbsp;@CounterThrottleAsync.ThrottleTimeSpan</div>
        <div>Semaphore.AvailableWaitHandle:&nbsp;@CounterThrottleAsync._workItemSemaphore.AvailableWaitHandle</div>
        <div>Semaphore.CurrentCount:&nbsp;@CounterThrottleAsync._workItemSemaphore.CurrentCount</div>
        <div>Stack.Count:&nbsp;@CounterThrottleAsync._workItemStack.Count</div>
    </div>

    <div>
        @{ var success = TryGetWorkItemList(out var workItemList); }

        @if (success)
        {
            foreach (var workItem in CounterThrottleAsync._workItemStack)
            {
                <div>A workItem</div>
            }
        }
    </div>
</div>