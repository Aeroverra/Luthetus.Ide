@using Fluxor.Blazor.Web.Components
@using Luthetus.Ide.RazorLib.ContextCase
@using Luthetus.Ide.RazorLib.ContextCase.Models;

@inherits FluxorComponent

<ContextBoundary ContextRecord="ContextFacts.ActiveContextsContext"
                 ClassCssString="luth_ide_active-contexts"
                 StyleCssString="height: 100%">

    @{
        var contextStates = ContextStatesWrap.Value;
    }

    <div class="luth_ide_section-title">

        @{
            var isInspecting = GetIsInspecting(contextStates);
        }

        <button class="luth_button"
                style="display: inline;"
                @onclick="() => DispatchToggleInspectActionOnClick(isInspecting)">

            @if (isInspecting)
            {
                <IconLock />
            }
            else
            {
                <IconInspect />
            }
        </button>

        ActiveContextsDisplay
    </div>

    <div class="luth_ide_section-body">

        @{
            var contextRecordsToRender = contextStates.InspectionTargetContextRecords
                ?? contextStates.ActiveContextRecords;
        }

        @foreach (var contextRecord in contextRecordsToRender)
        {
            <ActiveContextEntryDisplay ContextRecord="contextRecord" />
            <hr />
        }
    </div>
</ContextBoundary>
