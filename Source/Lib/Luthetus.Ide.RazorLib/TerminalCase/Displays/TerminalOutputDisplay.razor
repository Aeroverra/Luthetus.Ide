@    using Luthetus.Common.RazorLib.KeyCase.Models;
@    using Luthetus.Ide.RazorLib.TerminalCase.Models;
@    using Luthetus.TextEditor.RazorLib.TextEditors.Displays

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@{ var terminalSession = TerminalSessionsStateSelection.Value; }

<div class="luth_ide_terminal-output-display">
    <div class="luth_ide_terminal-output-history-display">
        @{
            string outputString = TerminalSessionWasModifiedStateWrap.Value.EmptyTextHack;

            if (terminalSession is not null)
            {
                if (TerminalCommandKey == Key<TerminalCommand>.Empty)
                {
                    // Render out all of the session's standard output
                    outputString = terminalSession.ReadStandardOut() ?? string.Empty;
                }
                else
                {
                    // Render out ONLY the standard output from the specified command
                    outputString = terminalSession.ReadStandardOut(TerminalCommandKey) ?? string.Empty;
                }
            }
        }

        @ParseHttpLinks(outputString)
    </div>
    
    <div class="luth_ide_terminal-output-input-display">
        @if (terminalSession is not null && AllowInput)
        {
            <div>
                @(terminalSession.WorkingDirectoryAbsolutePathString ?? "null")
            </div>
            
            <div>
                <TextEditorViewModelDisplay TextEditorViewModelKey="terminalSession.TextEditorViewModelKey"
                                            IncludeHeaderHelperComponent="false"
                                            IncludeFooterHelperComponent="false"
                                            IncludeContextMenuHelperComponent="false"
                                            AfterOnKeyDownAsync="TextEditorAfterOnKeyDownAsync"/>
            </div>
        }
    </div>
</div>        
