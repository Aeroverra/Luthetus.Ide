<button class="luth_button luth_te_text-editor-group-tab luth_tab @IsActiveCssClass"
        @onclick="OnClickSetActiveTextEditorViewModel"
        @onmousedown="OnMouseDown"
        @onmousedown:preventDefault="true">
    
    @{
        var viewModelState = TextEditorViewModelStateWrap.Value;

        var viewModel = viewModelState.ViewModelList.FirstOrDefault(
            x => x.ViewModelKey == TextEditorViewModelKey);
        
        if (viewModel is null)
        {
            <text>ViewModel not found</text>
        }
        else
        {
            var textEditorModelsCollectionWrap = TextEditorModelStateWrap.Value;

            var textEditorModel = textEditorModelsCollectionWrap.ModelList.FirstOrDefault(
                x => x.ResourceUri == viewModel.ResourceUri);

            if (textEditorModel is null)
            {
                <div>Model not found</div>
            }
            else
            {
                <text>
                    @(viewModel.GetTabDisplayNameFunc?.Invoke(textEditorModel) ??
                        textEditorModel.ResourceUri.Value)

                    @if (textEditorModel.IsDirty)
                    {
                        <text>*</text>
                    }
                </text>
            }
        }
    }
    
    <button class="luth_button luth_button-close"
            @onclick:stopPropagation="true"
            @onclick="CloseTabOnClick">
        
        <IconClose/>
    </button>
</button>