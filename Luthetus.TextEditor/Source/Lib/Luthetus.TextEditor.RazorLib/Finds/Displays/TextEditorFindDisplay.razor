@using Fluxor.Blazor.Web.Components;

@inherits FluxorComponent

@{ var findProviderState = TextEditorFindProviderStateWrap.Value; }

<div class="luth_te_find">
    <div class="luth_te_find-tabs">
        @foreach (var findProvider in findProviderState.FindProviderBag)
        {
            <FindProviderTabDisplay FindProvider="findProvider"
                                    IsActive="findProvider.FindProviderKey == findProviderState.ActiveFindProviderKey" />
        }
    </div>
    
    <div class="luth_te_find-body">

        SearchQuery:&nbsp;

        <input class="luth_input"
               @bind="SearchQuery"
               @bind:event="oninput"/>

        <button class="luth_button"
                @onclick="() => DoSearchOnClickAsync(findProviderState)">
            Do Search
        </button>

        @{ var activeFindProvider = findProviderState.ActiveFindProviderOrDefault(); }

        @if (activeFindProvider is null)
        {
            @: null active find provider
        }
        else
        {
            @: @activeFindProvider.DisplayName
        }

        @if (_isSearching)
        {
            <IconLoading/>
        }
        else
        {
            <div>
                Not Searching
            </div>
        }
    </div>
</div>