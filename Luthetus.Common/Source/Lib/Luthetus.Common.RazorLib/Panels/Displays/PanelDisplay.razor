@using Luthetus.Common.RazorLib.Panels.Models;
@using Luthetus.Common.RazorLib.PolymorphicUis.Displays;

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@{
    var panelsState = PanelsStateWrap.Value;

    var panelGroup = panelsState.PanelGroupList.FirstOrDefault(x => x.Key == PanelGroupKey);

    Panel? activePanelTab = null;

    if (panelGroup is not null)
        activePanelTab = panelGroup.TabList.FirstOrDefault(x => x.Key == panelGroup.ActiveTabKey);
}

<div class="luth_ide_panel @PanelPositionCssClass @CssClassString"
     style="@GetElementDimensionsStyleString(panelGroup, activePanelTab)">
    
    <div class="luth_ide_panel-tabs">

        @if (panelGroup is not null)
        {
			<PolymorphicTabListDisplay TabList="GetTabList(panelGroup)"/>

            <!-- foreach (var panelTab in panelGroup.TabList)
            {
                <PanelTabDisplay @key="panelTab.Key"
                                 PanelTab="panelTab"
                                 PanelRecord="panelGroup" />
            } -->
        }

        <div class="luth_ide_panel-tabs-justify-end"
             style="display: flex;">
            @if (JustifyEndRenderFragment is not null)
            {
                @JustifyEndRenderFragment
            }
        </div>

        @if (PanelsStateWrap.Value.DragEventArgs is not null)
        {
            <div class="luth_ide_panel-tab-dropzone luth_ide_panel-tab-dropzone-top"
                 @onmouseup:stopPropagation="true"
                 @onmouseup="TopDropzoneOnMouseUp">
            </div>
            
            <div class="luth_ide_panel-tab-dropzone luth_ide_panel-tab-dropzone-bottom"
                 @onmouseup:stopPropagation="true"
                 @onmouseup="BottomDropzoneOnMouseUp">
            </div>
        }
    </div>
    
    <div class="luth_ide_panel-body">
        @if (activePanelTab is not null)
        {
            <DynamicComponent Type="activePanelTab.ContentRendererType"/>
        }
    </div>
    
</div>