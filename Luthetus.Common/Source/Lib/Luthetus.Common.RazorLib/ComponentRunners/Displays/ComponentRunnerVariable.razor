@using Luthetus.Common.RazorLib.ComponentRunners.Internals

<div class="luth_component-runner-property">
    <span class="luth_te_type">
        @VariableType.Name
    </span>
    <span class="@VariableNameCssClass">
        @VariableName
    </span>

    @if (VariableType.IsPrimitive || VariableType == typeof(string))
    {
        <ComponentRunnerPrimitiveInput VariableName="@VariableName"
                                       VariableType="@VariableType"
                                       ParametersKey='@(ParametersKey)' />
    }
    else
    {
        var constructorBag = VariableType.GetConstructors();

        if (constructorBag.Length == 0)
        {
            <span>The type '@VariableType.Name' is not supported.</span>
        }
        else
        {
            <div style="padding-left: 20px;">
                <div style="border-left: 2px solid var(--luth_primary-border-color); padding-left: 8px; margin-bottom: 4px;">

                    @{
                        var componentRunnerParameter = GetComponentRunnerParameter(DisplayState);
                    }

                    @if (componentRunnerParameter?.ChosenConstructorInfo is not null)
                    {
                        <ComponentRunnerConstructor ConstructorInfo="componentRunnerParameter.ChosenConstructorInfo"
                                                    IsChosenConstructor="true"
                                                    OnClick="_ => {}"
                                                    OnUnsetChosenConstructorInfo="HandleOnUnsetChosenConstructorInfo"
                                                    ParametersKey="@ParametersKey" />
                    }
                    else
                    {
                        foreach (var constructor in constructorBag)
                        {
                            <ComponentRunnerConstructor ConstructorInfo="constructor"
                                                        IsChosenConstructor="false"
                                                        OnClick="HandleConstructorOnClick"
                                                        OnUnsetChosenConstructorInfo="() => {}"
                                                        ParametersKey="@ParametersKey" />
                        }
                    }
                </div>
            </div>
        }
    }
</div>